{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/Desktop/Fakhar Training/React/Redux with Containers/my-react-redux app with containers/src/Containers/todoTaskContainer.js\",\n  _this = this;\nimport { ToDoTask } from \"../Components/ToDoTask\";\nimport { editTodo } from \"../store/actions\";\nimport { removeTodo } from \"../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoTaskContainer = function (element) {\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    index\n  };\n  const mapStateToProps = state => {\n    return {};\n  };\n  const mapDispatchToProps = dispatch => {\n    return {\n      editTodo: (index, value) => {\n        dispatch(editTodo(index, value));\n      },\n      removeTodo: index => {\n        dispatch(removeTodo(index));\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ToDoTask, {\n    ...mapStateToProps,\n    ...mapDispatchToProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, _this);\n};\n_c = ToDoTaskContainer;\nexport default ToDoTaskContainer;\nvar _c;\n$RefreshReg$(_c, \"ToDoTaskContainer\");","map":{"version":3,"names":["ToDoTask","editTodo","removeTodo","jsxDEV","_jsxDEV","ToDoTaskContainer","element","index","arguments","length","undefined","mapStateToProps","state","mapDispatchToProps","dispatch","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux with Containers/my-react-redux app with containers/src/Containers/todoTaskContainer.js"],"sourcesContent":["import { ToDoTask } from \"../Components/ToDoTask\";\nimport { editTodo } from \"../store/actions\";\nimport { removeTodo } from \"../store/actions\";\nconst ToDoTaskContainer = (element, index={index}) => {\n    const mapStateToProps = (state) => {\n        return {\n            \n        };\n    };\n\n    const mapDispatchToProps = (dispatch) => {\n        return {\n            editTodo: (index, value) => {dispatch(editTodo(index, value))},\n            removeTodo: (index) => {dispatch(removeTodo(index))}\n        };\n    };\n\n    return <ToDoTask {...mapStateToProps} {...mapDispatchToProps} />\n}\n\nexport default ToDoTaskContainer;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9C,MAAMC,iBAAiB,GAAG,SAAAA,CAACC,OAAO,EAAoB;EAAA,IAAlBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC;IAACD;EAAK,CAAC;EAC7C,MAAMI,eAAe,GAAIC,KAAK,IAAK;IAC/B,OAAO,CAEP,CAAC;EACL,CAAC;EAED,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;IACrC,OAAO;MACHb,QAAQ,EAAEA,CAACM,KAAK,EAAEQ,KAAK,KAAK;QAACD,QAAQ,CAACb,QAAQ,CAACM,KAAK,EAAEQ,KAAK,CAAC,CAAC;MAAA,CAAC;MAC9Db,UAAU,EAAGK,KAAK,IAAK;QAACO,QAAQ,CAACZ,UAAU,CAACK,KAAK,CAAC,CAAC;MAAA;IACvD,CAAC;EACL,CAAC;EAED,oBAAOH,OAAA,CAACJ,QAAQ;IAAA,GAAKW,eAAe;IAAA,GAAME;EAAkB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAG,CAAC;AACpE,CAAC;AAAAC,EAAA,GAfKhB,iBAAiB;AAiBvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}