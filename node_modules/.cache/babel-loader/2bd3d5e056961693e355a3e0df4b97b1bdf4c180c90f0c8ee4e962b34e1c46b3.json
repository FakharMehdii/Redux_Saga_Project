{"ast":null,"code":"// import { createStore } from 'redux';\n// import rootReducer from './reducers/index';\n\n// // const devToolsCompose = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] \n\n// // const store = createStore(rootReducer,['Use Redux'],devToolsCompose);\n// const store = createStore(rootReducer, \n//     window.devToolsExtension && window.devToolsExtension()\n//   )\n\n// export default store;\n\n// // \n\nimport { configureStore } from '@reduxjs/toolkit';\n// import rootReducer from './reducers/index';\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootSaga from './modules/rootSaga';\nconst create = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = configureStore({\n    reducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware)\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport default create;","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootSaga","create","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","concat","run"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux Project/my-react-redux app/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\n// import rootReducer from './reducers/index';\n\n\n// // const devToolsCompose = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] \n\n// // const store = createStore(rootReducer,['Use Redux'],devToolsCompose);\n// const store = createStore(rootReducer, \n//     window.devToolsExtension && window.devToolsExtension()\n//   )\n\n// export default store;\n\n\n// // \n\n\nimport { configureStore } from '@reduxjs/toolkit';\n// import rootReducer from './reducers/index';\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootSaga from './modules/rootSaga';\n\nconst create = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  \n  const store = configureStore({\n    reducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware)\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nexport default create;"],"mappings":"AAAA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA,OAAOC,oBAAoB,MAAM,kBAAkB;AACnD,OAAOC,QAAQ,MAAM,oBAAoB;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,cAAc,GAAGH,oBAAoB,CAAC,CAAC;EAE7C,MAAMI,KAAK,GAAGL,cAAc,CAAC;IAC3BM,OAAO;IACPC,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACL,cAAc;EACpF,CAAC,CAAC;EAEFA,cAAc,CAACM,GAAG,CAACR,QAAQ,CAAC;EAE5B,OAAOG,KAAK;AACd,CAAC;AAED,eAAeF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}