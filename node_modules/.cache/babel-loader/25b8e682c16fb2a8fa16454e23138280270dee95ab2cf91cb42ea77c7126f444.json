{"ast":null,"code":"import { combineReducers } from \"redux\";\nconst initialState = {\n  tasks: []\n};\nfunction taskReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state.tasks, [...state.tasks]];\n    default:\n      return state;\n  }\n  console.log(state);\n}\nconst rootReducer = combineReducers({\n  tasks: taskReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","initialState","tasks","taskReducer","state","arguments","length","undefined","action","type","ADD_TODO","console","log","rootReducer"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux Project/my-react-redux app/src/store/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"\n\n\nconst initialState = {\n    tasks: [],\n}\n\nfunction taskReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return [\n                ...state.tasks, [...state.tasks],\n            ];\n            default:\n                return state;\n\n    }\n    console.log(state);\n}\n\nconst rootReducer = combineReducers({\n    tasks:taskReducer,\n\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAGvC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKC,QAAQ;MACT,OAAO,CACH,GAAGN,KAAK,CAACF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,CAAC,CACnC;IACD;MACI,OAAOE,KAAK;EAExB;EACAO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;AACtB;AAEA,MAAMS,WAAW,GAAGb,eAAe,CAAC;EAChCE,KAAK,EAACC;AAEV,CAAC,CAAC;AAEF,eAAeU,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}