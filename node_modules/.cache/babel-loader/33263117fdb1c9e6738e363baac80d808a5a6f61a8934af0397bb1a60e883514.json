{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_TODO } from '../actions/index';\nconst initialState = {\n  tasks: [\"fakhar\"]\n};\nfunction taskReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO:\n      console.log(state);\n      return {\n        tasks: [...state.tasks, action.payload]\n      };\n    default:\n      return state;\n  }\n}\nconst rootReducer = combineReducers({\n  tataskReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","ADD_TODO","initialState","tasks","taskReducer","state","arguments","length","undefined","action","type","console","log","payload","rootReducer","tataskReducer"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux Project/my-react-redux app/src/store/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"\nimport {ADD_TODO} from '../actions/index'\n\nconst initialState = {\n    tasks: [\"fakhar\"],\n}\n\nfunction taskReducer(state = initialState, action) {\n    \n    switch (action.type) {\n        case ADD_TODO:\n            console.log(state);\n            return {\n                tasks: [...state.tasks, action.payload]\n            };\n            default:\n                return state;\n\n    }\n    \n}\n\nconst rootReducer = combineReducers({\n    tataskReducer,\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAAQC,QAAQ,QAAO,kBAAkB;AAEzC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CAAC,QAAQ;AACpB,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKT,QAAQ;MACTU,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClB,OAAO;QACHF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEM,MAAM,CAACI,OAAO;MAC1C,CAAC;IACD;MACI,OAAOR,KAAK;EAExB;AAEJ;AAEA,MAAMS,WAAW,GAAGd,eAAe,CAAC;EAChCe;AACJ,CAAC,CAAC;AAEF,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}