{"ast":null,"code":"var _jsxFileName = \"/home/mergestack/Desktop/Fakhar Training/React/Containers-Redux Project/my-react-redux app with containers/src/Components/ToDoTask/index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ToDoTask(_ref) {\n  _s();\n  let {\n    element,\n    index,\n    editTodo,\n    removeTodo\n  } = _ref;\n  const [done, setDone] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [indexToBeEdited, setIndexToBeEdited] = useState();\n  const handleEdit = index => {\n    setIndexToBeEdited(index);\n    setEdit(true);\n  };\n  const handleEditChange = event => {\n    element = event.target.value;\n    setInputValue(event.target.value);\n  };\n  const handleEditKeyPress = event => {\n    if (event.key === 'Enter' && inputValue !== \"\") {\n      setEdit(false);\n      editTodo(indexToBeEdited, inputValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoTask\",\n    children: [edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"checkbox\",\n        type: \"text\",\n        value: inputValue ? inputValue : element,\n        onChange: handleEditChange,\n        onKeyDown: handleEditKeyPress,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: event => {\n          event.target.checked ? setDone(true) : setDone(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: done ? 'strike' : 'normal',\n        children: inputValue === '' ? element : inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 126\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"edit\",\n        className: \"fa fa-edit edit buttons\",\n        onClick: () => handleEdit(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"delete\",\n        className: \"fa-solid fa-trash-can buttons\",\n        onClick: () => {\n          removeTodo(index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoTask, \"DDXFfb0PsFeyBcgN/b4tMJyslwI=\");\n_c = ToDoTask;\nvar _c;\n$RefreshReg$(_c, \"ToDoTask\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ToDoTask","_ref","_s","element","index","editTodo","removeTodo","done","setDone","edit","setEdit","inputValue","setInputValue","indexToBeEdited","setIndexToBeEdited","handleEdit","handleEditChange","event","target","value","handleEditKeyPress","key","className","children","type","onChange","onKeyDown","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","checked","id","onClick","_c","$RefreshReg$"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Containers-Redux Project/my-react-redux app with containers/src/Components/ToDoTask/index.js"],"sourcesContent":["import {useState} from \"react\"\n\nexport function ToDoTask ({element, index, editTodo, removeTodo}) { \n  const [done, setDone] = useState(false)\n  const [edit, setEdit] = useState(false)\n  const [inputValue, setInputValue] = useState('');\n  const [indexToBeEdited, setIndexToBeEdited] = useState();  \n  \n  const handleEdit = (index) => {\n    setIndexToBeEdited(index);\n    setEdit(true);\n  }\n\n  const handleEditChange = (event)  => {\n    element= event.target.value\n    setInputValue(event.target.value);\n  }\n\n  const handleEditKeyPress = (event)  => {\n    if(event.key === 'Enter' && inputValue!==\"\")\n    {\n      setEdit(false);\n      editTodo(indexToBeEdited, inputValue);\n    }\n  }\n\n  return(\n    <div className='todoTask'>\n      {\n          edit ? <div>  <input   className=\"checkbox\" type='text' value={inputValue ?  inputValue : element} onChange={handleEditChange} onKeyDown={handleEditKeyPress} autoFocus /></div>  \n          : <div> <input    type='checkbox' onChange={(event) => {event.target.checked ? setDone(true) : setDone(false)}} /> <span className= {done? 'strike':'normal'} >{inputValue===''? element : inputValue}</span> </div> \n      }\n      <div>\n        <i id='edit'   className='fa fa-edit edit buttons' onClick={() => handleEdit(index)}></i>\n        <i id='delete'  className='fa-solid fa-trash-can buttons' onClick={ () => {removeTodo(index)} }></i>\n      </div>    \n    </div>\n    );\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}