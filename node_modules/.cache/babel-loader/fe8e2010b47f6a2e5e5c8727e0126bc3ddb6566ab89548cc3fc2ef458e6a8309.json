{"ast":null,"code":"import { combineReducers } from \"redux\";\nconst initialState = {\n  tasks: []\n};\nfunction taskReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    default:\n      return state;\n  }\n}\nconst rootReducer = combineReducers({\n  tasks: taskReducer\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","initialState","tasks","taskReducer","state","arguments","length","undefined","action","type","ADD_TODO","payload","rootReducer"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux Project/my-react-redux app/src/store/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"\n\n\nconst initialState = {\n    tasks: [],\n}\n\nfunction taskReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO:\n            return {\n                ...state, tasks: [...state.tasks, action.payload],\n            };\n            default:\n                return state;\n\n    }\n}\n\nconst rootReducer = combineReducers({\n    tasks:taskReducer,\n\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAGvC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKC,QAAQ;MACT,OAAO;QACH,GAAGN,KAAK;QAAEF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEM,MAAM,CAACG,OAAO;MACpD,CAAC;IACD;MACI,OAAOP,KAAK;EAExB;AACJ;AAEA,MAAMQ,WAAW,GAAGZ,eAAe,CAAC;EAChCE,KAAK,EAACC;AAEV,CAAC,CAAC;AAEF,eAAeS,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}