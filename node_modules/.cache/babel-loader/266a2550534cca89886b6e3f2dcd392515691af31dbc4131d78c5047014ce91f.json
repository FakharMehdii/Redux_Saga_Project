{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_TODO } from '../actions/index';\nimport { REMOVE_TODO } from \"../actions/index\";\nimport { EDIT_TODO } from \"../actions/index\";\nconst initialState = {\n  tasks: []\n};\nfunction list() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        return {\n          tasks: [...state.tasks, action.payload]\n        };\n      }\n    case REMOVE_TODO:\n      {\n        const updatedTasks = state.tasks.filter((task, index) => index !== action.item);\n        return {\n          ...state,\n          tasks: updatedTasks\n        };\n      }\n    case EDIT_TODO:\n      {\n        console.log(\"Enter press ho raha hai\");\n        const updatedTasks = state.tasks;\n        updatedTasks[action.item] = action.payload;\n        console.log(updatedTasks);\n        return {\n          ...state,\n          tasks: updatedTasks\n        };\n      }\n    default:\n      return state;\n  }\n}\nconst rootReducer = combineReducers({\n  list\n});\nexport default rootReducer;","map":{"version":3,"names":["combineReducers","ADD_TODO","REMOVE_TODO","EDIT_TODO","initialState","tasks","list","state","arguments","length","undefined","action","type","payload","updatedTasks","filter","task","index","item","console","log","rootReducer"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/Redux Project/my-react-redux app/src/store/reducers/index.js"],"sourcesContent":["import { combineReducers } from \"redux\"\nimport {ADD_TODO} from '../actions/index'\nimport { REMOVE_TODO } from \"../actions/index\";\nimport { EDIT_TODO } from \"../actions/index\";\nconst initialState = {\n    tasks: [],\n}\n\nfunction list(state = initialState, action) {\n    \n    switch (action.type) {\n        case ADD_TODO:\n        {   \n            \n            return {\n                tasks: [...state.tasks, action.payload],\n            };\n\n        }\n        case REMOVE_TODO:\n        {\n\n            const updatedTasks = state.tasks.filter((task, index) => index !== action.item);\n            return {\n                ...state,\n                tasks: updatedTasks,\n            };\n        }\n        case EDIT_TODO:\n        {\n            console.log(\"Enter press ho raha hai\");\n\n            const updatedTasks= state.tasks;\n            updatedTasks[action.item] = action.payload;\n            console.log(updatedTasks);\n\n            return {\n                ...state,\n                tasks: updatedTasks,\n            }\n\n        }\n\n        default:\n            return state;\n\n    }\n    \n}\n\nconst rootReducer = combineReducers({\n    list,\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,SAASC,IAAIA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEtC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKX,QAAQ;MACb;QAEI,OAAO;UACHI,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEM,MAAM,CAACE,OAAO;QAC1C,CAAC;MAEL;IACA,KAAKX,WAAW;MAChB;QAEI,MAAMY,YAAY,GAAGP,KAAK,CAACF,KAAK,CAACU,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKN,MAAM,CAACO,IAAI,CAAC;QAC/E,OAAO;UACH,GAAGX,KAAK;UACRF,KAAK,EAAES;QACX,CAAC;MACL;IACA,KAAKX,SAAS;MACd;QACIgB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QAEtC,MAAMN,YAAY,GAAEP,KAAK,CAACF,KAAK;QAC/BS,YAAY,CAACH,MAAM,CAACO,IAAI,CAAC,GAAGP,MAAM,CAACE,OAAO;QAC1CM,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;QAEzB,OAAO;UACH,GAAGP,KAAK;UACRF,KAAK,EAAES;QACX,CAAC;MAEL;IAEA;MACI,OAAOP,KAAK;EAEpB;AAEJ;AAEA,MAAMc,WAAW,GAAGrB,eAAe,CAAC;EAChCM;AACJ,CAAC,CAAC;AAEF,eAAee,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}