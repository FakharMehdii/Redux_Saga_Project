{"ast":null,"code":"function handleChange(event) {\n  setInputValue(event.target.value);\n}\nfunction handleKeyPress(event) {\n  if (event.key === 'Enter' && inputValue !== \"\") {\n    console.log(\"Enter pressed\");\n    // setTasks((prevValues) => [...prevValues, inputValue.trim()]);\n    setTasks([...tasks, inputValue.trim()]);\n    setInputValue('');\n  }\n}\nfunction handleCheckboxChange(event) {\n  if (event.target.checked) setDone(true);else setDone(false);\n}\nfunction handleEditChange(event) {\n  task = event.target.value;\n  setInputValue(event.target.value);\n}\nfunction handleEdit(index) {\n  setEdit(true);\n}\nfunction handleEditKeyPress(event) {\n  if (event.key === 'Enter' && inputValue !== \"\") {\n    setTasks(prevValues => {\n      const updatedValues = [...prevValues];\n      updatedValues[index] = inputValue;\n      setEdit(false);\n      return updatedValues;\n    });\n  }\n}\nfunction handleDelete(index) {\n  let updatedValues = [...tasks];\n  // let toBeDeletedvalueIndex = updatedValues.find((value,ind) => index === ind);\n  updatedValues.splice(index, 1);\n  console.log(updatedValues);\n  setTasks([...updatedValues]);\n}","map":{"version":3,"names":["handleChange","event","setInputValue","target","value","handleKeyPress","key","inputValue","console","log","setTasks","tasks","trim","handleCheckboxChange","checked","setDone","handleEditChange","task","handleEdit","index","setEdit","handleEditKeyPress","prevValues","updatedValues","handleDelete","splice"],"sources":["/home/mergestack/Desktop/Fakhar Training/React/React Project/my-react-app/src/Helper/functions.js"],"sourcesContent":["function handleChange(event) \n{\n    setInputValue(event.target.value);\n    \n}\n\n\nfunction handleKeyPress(event) {\n    if (event.key === 'Enter' && inputValue!==\"\") {\n      console.log(\"Enter pressed\");\n      // setTasks((prevValues) => [...prevValues, inputValue.trim()]);\n      setTasks([...tasks,inputValue.trim()])\n      setInputValue('');\n    }\n}\n\n\n  function handleCheckboxChange(event)  {\n    if(event.target.checked)\n        setDone(true);\n    else\n        setDone(false);\n}\n\nfunction handleEditChange(event) {\n    task= event.target.value\n    setInputValue(event.target.value);\n\n}\n\n\n  function handleEdit(index) {\n    setEdit(true);\n}\n\n\nfunction handleEditKeyPress(event) {\n    if (event.key === 'Enter' && inputValue!==\"\") {\n\n        setTasks((prevValues) => {\n            const updatedValues = [...prevValues];\n            updatedValues[index] = inputValue;\n            setEdit(false);\n            return updatedValues;\n\n        });\n    }\n}\n\nfunction handleDelete(index) {\n\nlet updatedValues = [...tasks];\n// let toBeDeletedvalueIndex = updatedValues.find((value,ind) => index === ind);\nupdatedValues.splice(index,1);\n\n\nconsole.log(updatedValues);\n\nsetTasks([...updatedValues]);\n}"],"mappings":"AAAA,SAASA,YAAYA,CAACC,KAAK,EAC3B;EACIC,aAAa,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;AAErC;AAGA,SAASC,cAAcA,CAACJ,KAAK,EAAE;EAC3B,IAAIA,KAAK,CAACK,GAAG,KAAK,OAAO,IAAIC,UAAU,KAAG,EAAE,EAAE;IAC5CC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B;IACAC,QAAQ,CAAC,CAAC,GAAGC,KAAK,EAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;IACtCV,aAAa,CAAC,EAAE,CAAC;EACnB;AACJ;AAGE,SAASW,oBAAoBA,CAACZ,KAAK,EAAG;EACpC,IAAGA,KAAK,CAACE,MAAM,CAACW,OAAO,EACnBC,OAAO,CAAC,IAAI,CAAC,CAAC,KAEdA,OAAO,CAAC,KAAK,CAAC;AACtB;AAEA,SAASC,gBAAgBA,CAACf,KAAK,EAAE;EAC7BgB,IAAI,GAAEhB,KAAK,CAACE,MAAM,CAACC,KAAK;EACxBF,aAAa,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;AAErC;AAGE,SAASc,UAAUA,CAACC,KAAK,EAAE;EACzBC,OAAO,CAAC,IAAI,CAAC;AACjB;AAGA,SAASC,kBAAkBA,CAACpB,KAAK,EAAE;EAC/B,IAAIA,KAAK,CAACK,GAAG,KAAK,OAAO,IAAIC,UAAU,KAAG,EAAE,EAAE;IAE1CG,QAAQ,CAAEY,UAAU,IAAK;MACrB,MAAMC,aAAa,GAAG,CAAC,GAAGD,UAAU,CAAC;MACrCC,aAAa,CAACJ,KAAK,CAAC,GAAGZ,UAAU;MACjCa,OAAO,CAAC,KAAK,CAAC;MACd,OAAOG,aAAa;IAExB,CAAC,CAAC;EACN;AACJ;AAEA,SAASC,YAAYA,CAACL,KAAK,EAAE;EAE7B,IAAII,aAAa,GAAG,CAAC,GAAGZ,KAAK,CAAC;EAC9B;EACAY,aAAa,CAACE,MAAM,CAACN,KAAK,EAAC,CAAC,CAAC;EAG7BX,OAAO,CAACC,GAAG,CAACc,aAAa,CAAC;EAE1Bb,QAAQ,CAAC,CAAC,GAAGa,aAAa,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}